name: Workflow build/push

on:
    push:
        branches:
            - master

    pull_request:

env:
    # Environment variable
    IMAGE_NAME: node-js-applications

jobs:
    test:
        runs-on: ubuntu:latest

        steps:
            - uses: actions/checkout@v2

            - name: application tests

              run: |
                  if [ -f docker-compose.test.yml ]; then
                    docker-compose --file docker-compose.test.yml build
                    docker-compose --file docker-compose.test.yml run sut
                  else
                    docker build .--file Dockerfile
                  fi

    push:
        needs: test

        runs-on: ubuntu:latest

        if: github.event_name == 'push'

        steps:
            - uses: actions/checkout@v2

            - name: build the docker image
              run: docker build . --file Dockerfile --tag $IMAGE_NAME

            - name: login in github container registry
              run: echo "${{ secrets.CR_PAT }}" | docker login https:ghcr.io -u ${{ github.actor }} --password-stdin

            - name: push of image to github container registry
              run: |
                    IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

                    # Change image name of uppercase to lowercase
                    IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

                    # Remove git prefix ref of version
                    VERSION=$(echo "${{ github,ref }}" | sed -e 's,.*/\(.*\),\1,')

                    # Remove prefix v of tag
                    [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

                    # Use tag 'latest' as convention to docker:latest
                    [ "$VERSION" == "master" ] && VERSION=latest

                    echo IMAGE_ID=$IMAGE_ID
                    echo VERSION=$VERSION

                    # final commands to push
                    docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
                    docker push $IMAGE_ID:$VERSION


