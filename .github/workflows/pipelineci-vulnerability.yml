name: Workflow build/push

on:
    push:
        branches:
            - master

    pull_request:

env:
    # Environment variable
    IMAGE_NAME: node-js-applications

jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: application tests

              run: |
                  if [ -f docker-compose.test.yml ]; then
                    docker-compose --file docker-compose.test.yml build
                    docker-compose --file docker-compose.test.yml run sut
                  else
                    docker build . --file Dockerfile
                  fi

    push:
        needs: test

        runs-on: ubuntu-latest

        if: github.event_name == 'push'

        steps:
            - uses: actions/checkout@v2

            - name: build the docker image
              run: docker build . --file Dockerfile --tag $IMAGE_NAME

            - name: login in github container registry
              run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

            - name: push of image to github container registry
              run: |
                IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

                # Change image name of uppercase to lowercase
                IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

                # Remove git prefix ref of version
                VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

                # Remove prefix v of tag
                [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

                # Use tag 'latest' as convention to docker:latest
                [ "$VERSION" == "master" ] && VERSION=latest

                echo IMAGE_ID=$IMAGE_ID
                echo VERSION=$VERSION

                # final commands to push
                docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
                docker push $IMAGE_ID:$VERSION

    scan: 
      # only scan if the previous job finished right
      needs: push
      name: Vulnerability scan
      runs-on: ubuntu-latest
      steps:
        - name: login in github container registry
          run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

        - name: Pull docker image
          id: pullimage
          run: |
            docker pull ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
            # set local variable to send to trivy
            echo ::set-output name=nome_imagem::$IMAGE_NAME

        - uses: homoluctus/gitrivy@v1.0.0
          id: trivy
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            # image that was pushed in previous job
            image: ghcr.io/${{ github.repository_owner }}/${{ steps.pullimage.outputs.nome_imagem }}
            issue_title: security warning

        - name: answer issue
          env:
            REPO: ${{ github.event.repository.name }}
            OWNER: ${{ github.event.repository.owner.login }}
            ISSUE_NUMBER: ${{ steps.trivy.outputs.issue_number }}

          run: |
            # if return variable html_url (do step trivy) has something, this means that a issue was created. Then, comment it
            if [ ! -z "${{ steps.trivy.outputs.html_url  }}"]; then
              curl -s -X POST https://api.github.com/repos/$OWNER/$REPO/issues/$ISSUE_NUMBER/comments -d '{"body": "Can you look this issue?"}' -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"
            fi
